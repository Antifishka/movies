{"version":3,"file":"static/js/763.e97bc0aa.chunk.js","mappings":"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","sources":["constants/constants.js","pages/MovieDetails/MovieDetails.styled.js","components/BackButton/BackButton.styled.js","components/BackButton/BackButton.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["export const BASE_IMAGE_URL = `https://image.tmdb.org/t/p/w500`;\nexport const PlACEHOLDER_IMAGE_URL = `https://via.placeholder.com/100x150`;\nexport const PlACEHOLDER_POSTER_URL = `https://placehold.jp/200x300.png`;","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MovieBox = styled.div`\n  display: flex;\n  padding: 0 0 16px 0;\n  border-bottom: 1px solid black;\n`;\n\nexport const MovieImg = styled.img`\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), \n  0px 4px 4px rgb(0 0 0 / 6%), \n  1px 4px 6px rgb(0 0 0 / 16%);\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const MovieGenres = styled.ul`\n  display: flex;\n  gap: 8px;\n\n`;\n\nexport const MovieAdditionalBox = styled.div`\n  padding: 16px 0;\n  border-bottom: 1px solid black;\n  text-align: center;\n`;\n\nexport const MovieAdditionalTitle = styled.h2`\n  margin-bottom: 12px;\n`;\n\nexport const MovieAdditionalList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  color: black;\n  font-weight: 500;\n  font-size: 16px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active){\n    color: orangered;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 16px 0 8px 0;\n\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 16px;\n  text-transform: uppercase;\n\n  color: black;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n          \n:hover{\n  color: orangered;\n}\n`;","import { useLocation } from \"react-router-dom\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { StyledLink } from \"./BackButton.styled\";\n\nexport const BackButton = ({ children }) => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n    console.log(backLinkHref);\n\n    return <StyledLink to={backLinkHref}>\n        <BsArrowLeft size={16} />\n        {children}</StyledLink>\n};\n","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport API from \"../../services/api\";\nimport { BASE_IMAGE_URL, PlACEHOLDER_POSTER_URL } from 'constants/constants';\nimport { MovieBox, MovieImg, MovieInfo, MovieAdditionalBox, MovieGenres, MovieAdditionalTitle, MovieAdditionalList, Link } from \"./MovieDetails.styled\";\nimport { BackButton } from \"components/BackButton/BackButton\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const { pathname, search } = useLocation();\n  const fromPage = `${pathname}${search}`;\n  \n  useEffect(() => {\n    getMovieById();\n\n    async function getMovieById() {\n      try {\n        const fetchMovie = await API.fetchMovieById(Number(movieId));\n        console.log(fetchMovie);\n        setMovie(fetchMovie);\n\n      } catch (error) {\n        console.log(error);\n      };\n    };\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } = movie;\n\n  const imagePath = poster_path\n    ? BASE_IMAGE_URL + poster_path\n    : PlACEHOLDER_POSTER_URL;\n\n  const year = release_date ? release_date.slice(0, 4) : `No year`;\n\n  const userScore = () => {\n    return Math.round(vote_average * 10);\n  }\n\n  return (\n    <main>\n      <BackButton>Go back</BackButton>\n\n      <MovieBox> \n        <MovieImg src={imagePath} alt={title} width=\"200\"/>\n        <MovieInfo>\n          <h2>{title}\n            <span> ({year})</span>\n          </h2>\n          <p>User Score {userScore()}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <MovieGenres>\n            {genres?.map(({id, name}) => <li key={id}>{name}</li>)}\n          </MovieGenres>\n        </MovieInfo>\n      </MovieBox>\n      \n      <MovieAdditionalBox>\n        <MovieAdditionalTitle>Additional infomation</MovieAdditionalTitle>\n        <MovieAdditionalList>\n          <li>\n            <Link to=\"cast\" state={{from: fromPage}}>Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{from: fromPage}}>Reviews</Link>\n          </li>\n        </MovieAdditionalList>\n      </MovieAdditionalBox>\n\n      <Suspense fallback={null}>\n        <Outlet/>\n      </Suspense> \n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\nconst apiInstance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'e09f06c48afcb3ebfd8a25b0b6965d1e',\n        language: 'en-US',\n        // page: `${page}`,\n    },\n});\n\nasync function fetchTrendingMovies(page) {\n    const response = await apiInstance.get(`trending/movie/day?page=${page}`);\n     \n    const data = response.data;\n\n    if (!data.results.length) {\n        throw new Error(`Sorry, there are no movies.`)\n    }\n\n    return data;\n};\n\nasync function fetchMovieById(id) {\n    const { data } = await apiInstance.get(`movie/${id}`);\n\n    return data;\n}\n\nasync function fetchSearchMovies(query, page) {\n    const response = await apiInstance.get(`search/movie?query=${query}&page=${page}`);\n\n    const data = response.data;\n\n    if (!data.results.length) {\n        throw new Error(`Sorry, there are no movies matching your search query. Please try again.`)\n    }\n\n    return data;\n}\n\nasync function fetchMovieCredits(id) {\n    const response = await apiInstance.get(`movie/${id}/credits`);\n\n    const cast = response.data.cast;\n\n    if (!cast.length) {\n        throw new Error(`Not found cast...`)\n    }\n\n    return cast;\n}\n\nasync function fetchMovieReviews(id) {\n    const response = await apiInstance.get(`movie/${id}/reviews`);\n\n    const reviews = response.data.results;\n\n    return reviews;\n};\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMovieById,\n    fetchSearchMovies,\n    fetchMovieCredits,\n    fetchMovieReviews,\n};\n\nexport default api;"],"names":["BASE_IMAGE_URL","PlACEHOLDER_IMAGE_URL","PlACEHOLDER_POSTER_URL","MovieBox","styled","MovieImg","MovieInfo","MovieGenres","MovieAdditionalBox","MovieAdditionalTitle","MovieAdditionalList","Link","NavLink","StyledLink","BackButton","children","backLinkHref","useLocation","state","from","console","log","to","size","movieId","useParams","useState","movie","setMovie","pathname","search","fromPage","useEffect","API","Number","fetchMovie","getMovieById","poster_path","title","vote_average","overview","genres","release_date","imagePath","year","slice","src","alt","width","Math","round","map","id","name","Suspense","fallback","apiInstance","axios","baseURL","params","api_key","language","fetchTrendingMovies","page","get","response","data","results","length","Error","fetchMovieById","fetchSearchMovies","query","fetchMovieCredits","cast","fetchMovieReviews","reviews","api"],"sourceRoot":""}