{"version":3,"file":"static/js/544.8aa48e25.chunk.js","mappings":"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","sources":["components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/Pagination/Pagination.jsx","constants/constants.js","pages/Home/Home.jsx","pages/Home/Home.styled.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MoviesCard = styled.li`\n  padding: 4px;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), \n  0px 4px 4px rgb(0 0 0 / 6%), \n  1px 4px 6px rgb(0 0 0 / 16%);\n\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus{\n    transform: scale(1.03);\n  };\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nexport const MoviesImg = styled.img`\n  width: 100%;\n  border-radius: 4px;\n  height: 300px;\n  object-fit: cover;\n  margin-bottom: auto;\n`;\n\nexport const MoviesCardInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0 0 0;\n`;\n\nexport const MoviesTitle = styled.h4`\n  max-width: 158px; \n`;\n\nexport const MoviesVote = styled.p`\n  padding: 2px 4px;\n  border-radius: 4px;\n  color: white;\n  background-color: orangered;\n\n  font-size: 12px; \n  font-weight: 600;\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MoviesCard, StyledLink, MoviesImg, MoviesCardInfo, MoviesTitle, MoviesVote } from \"./MoviesItem.styled\";\n\nexport const MoviesItem = ({ id, title, imagePath, vote }) => {\n    const { pathname, search } = useLocation();\n    const fromPage = `${pathname}${search}`;\n\n    return (\n        <MoviesCard>\n            <StyledLink to={`/movies/${id}`} state={{from: fromPage}}>\n                <MoviesImg src={imagePath} alt={title} />\n                <MoviesCardInfo>\n                    <MoviesTitle>{title}</MoviesTitle>\n                    <MoviesVote>{vote}\n                    </MoviesVote>\n                </MoviesCardInfo>\n            </StyledLink>\n        </MoviesCard>\n    );\n};\n\nMoviesItem.propTypes = {\n    // id: PropTypes.number.isRequired,\n    imagePath: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    // vote: PropTypes.number.isRequired,\n}","import * as React from 'react';\nimport { usePaginationContext } from 'context/pagination';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { Box } from 'components/Box/Box';\nimport { useBreakpoint } from 'styled-breakpoints/react-styled';\nimport { down } from 'styled-breakpoints';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#ff4500',\n    },\n  },\n});\n\nexport const PaginationMUI = ({onClick}) => {\n  const { page, setPage, totalPages } = usePaginationContext();\n\n  const handleChangePage = (e, value) => {\n    setPage(value);\n  };\n\n  const onlyMobile = useBreakpoint(down('mobile'));\n  console.log(onlyMobile, \"onlyMobile\");\n  \n  return (\n    <Box position=\"absolute\"\n      bottom={0}\n      left={0}\n      right={0}\n      display=\"flex\"\n      justifyContent=\"center\"\n      mb=\"20px\">\n      <ThemeProvider theme={theme}>\n        <Stack spacing={3}>\n          <Pagination\n            color=\"primary\"\n            shape=\"rounded\"\n            size={onlyMobile ? \"small\" : \"medium\"}\n            count={totalPages}\n            page={page}\n            onChange={handleChangePage}\n          />\n        </Stack>\n      </ThemeProvider>\n    </Box>\n  );\n};","export const BASE_IMAGE_URL = `https://image.tmdb.org/t/p/w500`;\nexport const PlACEHOLDER_IMAGE_URL = `https://via.placeholder.com/100x150`;\nexport const PlACEHOLDER_POSTER_URL = `https://placehold.jp/200x300.png`;","import { useState, useEffect } from \"react\";\nimport API from 'services/api';\nimport { usePaginationContext } from 'context/pagination';\nimport { Loader } from \"components/Loader/Loader\";\nimport { BASE_IMAGE_URL, PlACEHOLDER_IMAGE_URL } from 'constants/constants';\nimport { HomeTitle, MoviesList } from \"./Home.styled\";\nimport { MoviesItem } from \"components/MoviesItem/MoviesItem\";\nimport { PaginationMUI } from 'components/Pagination/Pagination';\nimport { Box } from \"components/Box/Box\";\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { page, setTotalPages } = usePaginationContext();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrendinngMovies();\n\n    async function getTrendinngMovies() {\n      try {\n        const data = await API.fetchTrendingMovies(page);\n        console.log(data, \"data\");\n\n        const {results, total_pages} = data;\n        setTrendingMovies(results);\n        setTotalPages(total_pages);\n\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      };\n    };\n  }, [page, setTotalPages]);\n\n  return (\n    <Box pb=\"52px\" as=\"main\">\n      <HomeTitle>Trending today</HomeTitle>\n\n      {isLoading && <Loader />} \n\n      <MoviesList>\n        {trendingMovies.map(({ id, title, poster_path, vote_average }) => (\n          <MoviesItem \n            key={id}\n            id={id}\n            title={title} \n            imagePath={poster_path\n              ? BASE_IMAGE_URL + poster_path\n              : PlACEHOLDER_IMAGE_URL} \n            vote={vote_average\n              ? vote_average.toFixed(1)\n              : `No vote`\n          } />\n        ))}\n      </MoviesList>\n\n      <PaginationMUI />\n    </Box>\n  );\n};\n\nexport default Home;","import styled from \"styled-components\";\n\nexport const HomeTitle = styled.h2`\n  padding-top: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 16px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\n","import axios from \"axios\";\n\nconst apiInstance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'e09f06c48afcb3ebfd8a25b0b6965d1e',\n        language: 'en-US',\n        // page: `${page}`,\n    },\n});\n\nasync function fetchTrendingMovies(page) {\n    const response = await apiInstance.get(`trending/movie/day?page=${page}`);\n     \n    const data = response.data;\n\n    if (!data.results.length) {\n        throw new Error(`Sorry, there are no movies.`)\n    }\n\n    return data;\n};\n\nasync function fetchMovieById(id) {\n    const { data } = await apiInstance.get(`movie/${id}`);\n\n    return data;\n}\n\nasync function fetchSearchMovies(query, page) {\n    const response = await apiInstance.get(`search/movie?query=${query}&page=${page}`);\n\n    const data = response.data;\n\n    if (!data.results.length) {\n        throw new Error(`Sorry, there are no movies matching your search query. Please try again.`)\n    }\n\n    return data;\n}\n\nasync function fetchMovieCredits(id) {\n    const response = await apiInstance.get(`movie/${id}/credits`);\n\n    const cast = response.data.cast;\n\n    if (!cast.length) {\n        throw new Error(`Not found cast...`)\n    }\n\n    return cast;\n}\n\nasync function fetchMovieReviews(id) {\n    const response = await apiInstance.get(`movie/${id}/reviews`);\n\n    const reviews = response.data.results;\n\n    return reviews;\n};\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMovieById,\n    fetchSearchMovies,\n    fetchMovieCredits,\n    fetchMovieReviews,\n};\n\nexport default api;"],"names":["MoviesCard","styled","StyledLink","Link","MoviesImg","MoviesCardInfo","MoviesTitle","MoviesVote","MoviesItem","id","title","imagePath","vote","useLocation","pathname","search","fromPage","to","state","from","src","alt","theme","createTheme","palette","primary","main","PaginationMUI","onClick","usePaginationContext","page","setPage","totalPages","onlyMobile","useBreakpoint","down","console","log","position","bottom","left","right","display","justifyContent","mb","spacing","color","shape","size","count","onChange","e","value","BASE_IMAGE_URL","PlACEHOLDER_IMAGE_URL","PlACEHOLDER_POSTER_URL","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","setTotalPages","useEffect","API","data","results","total_pages","getTrendinngMovies","pb","as","map","poster_path","vote_average","toFixed","HomeTitle","MoviesList","apiInstance","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","response","length","Error","fetchMovieById","fetchSearchMovies","query","fetchMovieCredits","cast","fetchMovieReviews","reviews","api"],"sourceRoot":""}